1 Basic workflow
This chapter explains what version control is and why you should use it, and introduces the most common steps in a common Git workflow.

Icon exercise mc
What is version control?
50 xp
Icon exercise mc
Where does Git store information?
50 xp
Icon exercise mc
How can I check the state of a repository?
50 xp
Icon exercise interactive
How can I tell what I have changed?
10 xp
Icon exercise mc
What is in a diff?
50 xp
Icon exercise interactive
What's the first step in saving changes?
20 xp
Icon exercise interactive
How can I tell what's going to be committed?
30 xp
Icon exercise interactive
Interlude: how can I edit a file?
100 xp
Icon exercise interactive
How do I commit changes?
20 xp
Icon exercise mc
How can I view a repository's history?
50 xp
Icon exercise mc
How can I view a specific file's history?
50 xp
Icon exercise interactive
How do I write a better log message?
10 xp
HIDE CHAPTER DETAILS

What is version control?
A version control system is a tool that manages changes made to the files and directories in a project. Many version control systems exist; this lesson focuses on one called Git, which is used by many of the data science tools covered in our other lessons. Its strengths are:

Nothing that is saved to Git is ever lost, so you can always go back to see which results were generated by which versions of your programs.

Git automatically notifies you when your work conflicts with someone else's, so it's harder (but not impossible) to accidentally overwrite work.

Git can synchronize work done by different people on different machines, so it scales as your team does.

Version control isn't just for software: books, papers, parameter sets, and anything that changes over time or needs to be shared can and should be stored and shared using something like Git.

Which of the following does Git do?

ANSWER THE QUESTION
50 XP
Possible Answers
Keep track of changes to files.
press 1
Notice conflicts between changes made by different people.
press 2
Synchronize files between different computers.
press 3
All of the above.
press 4
Take Hint (-15 XP)

Answer #4 - All of the above.


EXERCISE
Where does Git store information?
Each of your Git projects has two parts: the files and directories that you create and edit directly, and the extra information that Git records about the project's history. The combination of these two things is called a repository.

Git stores all of its extra information in a directory called .git located in the root directory of the repository. Git expects this information to be laid out in a very precise way, so you should never edit or delete anything in .git.

Suppose your home directory /home/repl contains a repository called dental, which has a sub-directory called data. Where is information about the history of the files in /home/repl/dental/data stored?

INSTRUCTIONS
50 XP
Possible Answers
/home/repl/.git
press 1
/home/repl/dental/.git
press 2
/home/repl/dental/data/.git
press 3
None of the above.
press 4
Take Hint (-15 XP)

Answer #2 - /home/repl/dental/.git
# Yes: all of the information about a repository is stored under its root directory.

EXERCISE
How can I check the state of a repository?
When you are using Git, you will frequently want to check the status of your repository. To do this, run the command git status, which displays a list of the files that have been modified since the last time changes were saved.

You have been put in the dental repository. Use git status to discover which file(s) have been changed since the last save. Which file(s) are listed?

INSTRUCTIONS
50 XP
Possible Answers
data/summer.csv.
press 1
report.txt.
press 2
Neither of the above.
press 3
Both of the above.
press 4
Take Hint (-15 XP)

Answer #2 - report.txt. 

EXERCISE
How can I tell what I have changed?
Git has a staging area in which it stores files with changes you want to save that haven't been saved yet. Putting files in the staging area is like putting things in a box, while committing those changes is like putting that box in the mail: you can add more things to the box or take things out as often as you want, but once you put it in the mail, you can't make further changes.

Staging Area

git status shows you which files are in this staging area, and which files have changes that haven't yet been put there. In order to compare the file as it currently is to what you last saved, you can use git diff filename. git diff without any filenames will show you all the changes in your repository, while git diff directory will show you the changes to the files in some directory.

INSTRUCTIONS 1/1
10 XP
You have been put in the dental repository. Use git diff to see what changes have been made to the files.

Answer - git diff

EXERCISE
What is in a diff?
A diff is a formatted display of the differences between two sets of files. Git displays diffs like this:

diff --git a/report.txt b/report.txt
index e713b17..4c0742a 100644
--- a/report.txt
+++ b/report.txt
@@ -1,4 +1,4 @@
-# Seasonal Dental Surgeries 2017-18
+# Seasonal Dental Surgeries (2017) 2017-18

 TODO: write executive summary.
This shows:

The command used to produce the output (in this case, diff --git). In it, a and b are placeholders meaning "the first version" and "the second version".
An index line showing keys into Git's internal database of changes. We will explore these in the next chapter.
--- a/report.txt and +++ b/report.txt, which indicate that lines being removed are prefixed with -, while lines being added are prefixed with +.
A line starting with @@ that tells where the changes are being made. The pairs of numbers are start line,number of lines changed. Here, the diff output shows that 4 lines from line 1 are being removed and replaced with new lines.
A line-by-line listing of the changes with - showing deletions and + showing additions. (We have also configured Git to show deletions in red and additions in green.) Lines that haven't changed are sometimes shown before and after the ones that have in order to give context; when they appear, they don't have either + or - in front of them.
Desktop programming tools like RStudio can turn diffs like this into a more readable side-by-side display of changes; you can also use standalone tools like DiffMerge or WinMerge.

You have been put in the dental repository. Use git diff data/northern.csv to look at the changes to that file. How many lines have been changed?

INSTRUCTIONS
50 XP
Possible Answers
None.
press 1
1.
press 2
2.
press 3
20.
press 4
Take Hint (-15 XP)

Ansswer #2 - 1 line 
# Yes, the commit changed one line.

$ cd dental
$ git diff data/northern.csv
diff --git a/data/northern.csv b/data/northern.csv
index 5eb7a96..5a2a259 100644
--- a/data/northern.csv
+++ b/data/northern.csv
@@ -22,3 +22,4 @@ Date,Tooth
 2017-08-13,incisor
 2017-08-13,wisdom
 2017-09-07,molar
+2017-11-01,bicuspid
$ ^C
$ ^C
$























































